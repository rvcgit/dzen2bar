#!/usr/bin/env sh
# generic menu with rofi

rofi_cmd() {	# 1 parameter: menu_width. The rest of parameters is passed to rofi
	menu_width="$1"	# width in pixels
#	menu_width="100"
X=$(xrandr | grep '*' | uniq | awk '{print$1}' | cut -d 'x' -f1) #screen resolution ; X
Y=$(xrandr | grep '*' | uniq | awk '{print$1}' | cut -d 'x' -f2) #screen resolution ; Y
XP="$(xdotool getmouselocation | awk '{print$1}' | sed 's/x://g')"
YP="$(xdotool getmouselocation | awk '{print$2}' | sed 's/y://g')"
menu_width="$1"
if [[ "$YP" -lt "$(($Y*50/100))" ]];then loc="1";else  # 50% of Y resolution 
	loc="7";fi &&
if [[ $YP -le "50" ]];then anc="1";else
	anc="7";fi &&

if [[ $anc == "1" ]]; then pY=$(($YP+5));elif
	[[ $anc == "7" ]];then pY=$(($YP-$Y));fi

if [[ $(($XP+5)) -gt "$menu_width"  ]];then 
	pX="$(($XP-17*$menu_width/10))";else 
	pX="$(($XP+5))";fi ## x offset to align
	
	notify-send "XP = $XP ; YP = $YP \
	location : $loc; anchor : $anc "

	rofi -config ~/.config/rofi.old/config.rasi $@ \
		-location $loc -anchor $anc \
		-xoffset $pX -yoffset $pY \
		-no-sidebar-mode \
 		-theme-str 'window { width: 22ch; }' \
		-theme-str 'listview { lines: 12; dynamic: true; fixed-height: false; }'
}
rofi_menu() { # 3 parameters: menu_title menu_width menu_list
	menu_title="$1"
	menu_width="$2"
	menu_list="$3"

	IFS='
	'
	for line in $menu_list ; do
		echo "${line%%:*}"
	done \
	| rofi_cmd "$menu_width" -dmenu -p "$menu_title" \
	| {	read choice
		for line in $menu_list ; do
			if [ "$choice" = "${line%%:*}" ] ; then
				echo "${line#*:}"
				break
			fi
		done
	}
}

rofi_exit() {
	eval $(rofi_menu "î–©:" 100 \
		"$i_fa_ban cancel:true
		$i_fa_lock lock:screenlock
		$i_fa_circle_o suspend:systemctl suspend
		$i_fa_moon_o hibernate:systemctl hibernate
		$i_fa_sign_out logout:xdotool key --clearmodifiers super+shift+q
		$i_fa_refresh reboot:systemctl reboot
		$i_fa_plug poweroff:systemctl poweroff")
}
rofi_exit
